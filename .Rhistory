library(dplyr)
location.2012 <- select(any_drinking, state, location, contains("_2012"))
setwd("~/Dropbox/INFO 201/hw4")
# Read in `any_drinking.csv` data using a relative path
any_drinking <- read.csv('data/any_drinking.csv', stringsAsFactors = FALSE)
# Read in `binge.drinking.csv` data using a relative path
binge_drinking <- read.csv('data/binge_drinking.csv', stringsAsFactors = FALSE)
# Create a directory (using R) called "output" in your project directory
dir.create("output")
location.2012 <- select(any_drinking, state, location, contains("_2012"))
View(location.2012)
location.2012 <- mutate(location.2012, difference = males_2012 - females_2012)
View(location.2012)
filter(location.2012, difference < 0) %>% select(location, state, difference)
location.2012 %>% group_by(state,location) %>% summarise(diff = sum(difference)) %>% filter(diff < 0)
filter(location.2012, difference == min(abs(difference))) %>% select(location, state, mean = difference)
state.2012 <- filter(location.2012, state == location)
View(state.2012)
state.2012 <- filter(location.2012, state == location) %>% distinct(location)
state.2012 <- filter(location.2012, state == location) %>% distinct(location)
state.2012 <- filter(location.2012, state == location) %>% distinct()
View(state.2012)
highest.2012 <- filter(location.2012, both_sexes_2012 == max(both_sexes_2012)) %>% select(state, highest = both_sexes_2012)
View(highest.2012)
View(state.2012)
highest.2012 <- filter(state.2012, both_sexes_2012 == max(both_sexes_2012)) %>% select(state, highest = both_sexes_2012)
filter(location.2012, both_sexes_2012 == max(both_sexes_2012)) %>% select(state, highest = both_sexes_2012)
View(state.2012)
lowest.2012 <- filter(location.2012, both_sexes_2012 == min(both_sexes_2012)) %>% select(state, lowest = both_sexes_2012)
View(lowest.2012)
lowest.2012 <- filter(state.2012, both_sexes_2012 == min(both_sexes_2012)) %>% select(state, lowest = both_sexes_2012)
highest.2012 %>% select(difference) - lowest.2012 %>% select(difference)
highest.2012 <- filter(state.2012, both_sexes_2012 == max(both_sexes_2012)) %>% select(state, highest = both_sexes_2012)
highest.2012 %>% select(difference) - lowest.2012 %>% select(difference)
View(highest.2012)
highest.2012 %>% select(highest) - lowest.2012 %>% select(lowest)
write.csv(state.2012, 'output/state.2012.csv', row.names = FALSE)
StateInfo <- function(my.state) {
result <- any_drinking %>% filter(state == my.state)
write.csv(result, paste0('output/',my.state,'.csv'), row.names = FALSE)
}
StateInfo('Alabama')
StateInfo('Alaska')
StateInfo('Arizona')
counties <- binge_drinking %>% filter(location != state) %>% filter(location != "United States")
View(counties)
summarise(counties, mean = mean(both_sexes_2012))
mean(counties$both_sexes_2012)
min.ineachstate <- counties %>% group_by(state) %>% summarise(location = first(location), min = min(both_sexes_2012))
View(min.ineachstate)
counties %>% group_by(state) %>% filter(both_sexes_2012 == min(both_sexes_2012)) %>% select(state, location, both_sexes_2012) %>% distinct()
counties %>% group_by(state) %>% summarise(location = first(location), max = max(both_sexes_2012))
counties %>% group_by(state) %>% filter(both_sexes_2012 == max(both_sexes_2012)) %>% select(state, location, both_sexes_2012)
counties %>% group_by(state) %>% filter(both_sexes_2012 == max(both_sexes_2012)) %>% select(state, location, both_sexes_2012) %>% distinct()
counties %>% group_by(state) %>% filter(both_sexes_2012 == max(both_sexes_2012)) %>% select(state, location, both_sexes_2012) %>% distinct()
counties %>% group_by(state) %>% filter(both_sexes_2012 == max(both_sexes_2012)) %>% select(state, location, both_sexes_2012)
counties %>% group_by(state) %>% summarise(location = first(location), max = max(both_sexes_2012))
counties %>% mutate(increase = males_2012 - males_2002) %>% filter(increase == max(increase)) %>% select(state, location, increase)
counties %>% mutate(increase = males_2012 - males_2002) %>% filter(increase == max(increase)) %>% select(location, state, increase)
counties %>% mutate(increase = males_2012 - males_2002) %>% filter(increase == max(increase)) %>% select(location, state, increase)
male.increase <- nrow(counties %>% mutate(increase = males_2012 - males_2002) %>% filter(increase > 0))
View(male.increase)
male.increase
male.total <- nrow(counties %>% mutate(increase = males_2012 - males_2002))
male.precent.increase
male.total <- nrow(counties %>% mutate(increase = males_2012 - males_2002))
male.precent.increase <- round(male.increase / male.total * 100, 2)
male.precent.increase
female.increase <- nrow(counties %>% mutate(increase = females_2012 - females_2002) %>% filter(increase > 0))
female.total <- nrow(counties %>% mutate(increase = females_2012 - females_2002))
female.precent.increase <- round(female.increase / female.total * 100, 2)
female.precent.increase
female.increase
nrow(counties %>% mutate(increase.female = females_2012 - females_2002, increase.male = males_2012 - males_2002) %>% filter(increase.female > 0, increase.male < 0))
?filter
nrow(counties %>% mutate(increase.female = females_2012 - females_2002, increase.male = males_2012 - males_2002) %>% filter(increase.female > 0 & increase.male < 0))
colnames(any_drinking) <- paste0('any.',colnames(any_drinking))
colnames(binge_drinking) <- paste0('binge.',colnames(binge_drinking))
joined.driking <- any_drinking %>% left_join(binge_drinking, by = c('any.location' = 'binge.location', 'any.state' = 'binge.state'))
View(joined.driking)
View(any_drinking)
joined.driking <- joined.driking %>% mutate(diff.both.sexes.2012 = binge.both_sexes_2012 - any.both_sexes_2012)
View(joined.driking)
joined.driking %>% select(any.state, any.location, diff.both.sexes.2012) %>% filter(abs(diff.both.sexes.2012) == max(abs(diff.both.sexes.2012)))
joined.driking %>% select(any.state, any.location, diff.both.sexes.2012) %>% filter(abs(diff.both.sexes.2012) == min(abs(diff.both.sexes.2012)))
#drinking level given a state or year
output.info <- function(my.state, my.year) {
filtered <- any_drinking %>% filter(any.state == my.state) %>% select(any.state, any.location, contains(my.year))
return(filtered)
}
output.info('Alabama', '2012')
lapply(min.ineachstate$state, StateInfo)
